name: Deploy to EC2 on push main branch

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy NestJS app to EC2
    runs-on: ubuntu-latest
    environment: ec2-server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: |
          yarn prisma generate
          yarn test

      - name: Build project
        run: yarn build

      - name: Archive dist and production files
        run: |
          mkdir deploy
          cp -r dist generated prisma deploy/
          cp package.json yarn.lock deploy/
          tar czf deploy.tar.gz -C deploy .

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: 'deploy.tar.gz'
          target: '/var/www/nest-app/releases'

      - name: SSH and finalize on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd /var/www/nest-app/releases
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            mkdir $TIMESTAMP
            tar xzf deploy.tar.gz -C $TIMESTAMP
            rm deploy.tar.gz

            cd $TIMESTAMP
            yarn install --frozen-lockfile --production
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
            echo "ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> .env
            echo "REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> .env
            echo "PORT=${{ vars.PORT }}" >> .env
            yarn prisma generate
            yarn prisma migrate deploy

            ln -sfn /var/www/nest-app/releases/$TIMESTAMP /var/www/nest-app/current

            pm2 restart main || pm2 start /var/www/nest-app/current/dist/main.js --name main --env production
